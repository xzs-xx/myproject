<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:p="http://www.springframework.org/schema/p" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
        http://www.springframework.org/schema/p  
        http://www.springframework.org/schema/p/spring-p-3.1.xsd 
        http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-3.1.xsd 
		http://www.springframework.org/schema/util 
      	http://www.springframework.org/schema/util/spring-util-3.1.xsd			    
					    ">
	<!-- 加载数据库连接配置文件 --> 
<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
    <property name="locations"> <!-- PropertyPlaceholderConfigurer类中有个locations属性，接收的是一个数组，即我们可以在下面配好多个properties文件   -->
        <array>  
            <value>classpath:jdbc.properties</value>  
        </array>  
    </property>  
</bean>  
 <!--配置连接池-->
<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	<property name="driverClass" value="${driverClassName}"/>

	<property name="jdbcUrl" value="${url_ltx}"/>

	<property name="user" value="${username1}"/>
	<property name="password" value="${password1}" />
	<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数-->    
    <property name="acquireIncrement" value="${acquireIncrement}"/>      
    <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->    
    <property name="idleConnectionTestPeriod" value="${idleConnectionTestPeriod}"/>    
    <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->    
    <property name="initialPoolSize" value="${initialPoolSize}"/>   
    <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->    
    <property name="maxIdleTime" value="${maxIdleTime}"/>    
    <!--连接池中保留的最大连接数。Default: 15 -->    
    <property name="maxPoolSize" value="${maxPoolSize}"/>    
    <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->    
    <property name="maxStatementsPerConnection" value="${maxStatementsPerConnection}"/>    
    <!--c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能    
    通过多线程实现多个操作同时被执行。Default: 3-->    
    <property name="numHelperThreads" value="${numHelperThreads}" />    
</bean>
<!-- 扫描service组件 -->  
	<context:component-scan base-package="com.c.service*"/> 
    <!--配置sqlSessionFactory-->  
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"/>
	<property name="mapperLocations" value="classpath:mappers/*.xml"/>
</bean>
<!--配置dao-->
<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer" >	
	<property name="basePackage" value="com.c.dao"/>
	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
</bean>
<!--配置核心事务管理器-->
<bean id="txManger" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
</bean>
<!--通知  -->
 <tx:advice id="txAdvice" transaction-manager="txManger">
 <!-- 配置传播行为 -->
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED"
				 />
			<tx:method name="find*" propagation="REQUIRED"
				 />
			<tx:method name="search*" propagation="REQUIRED"
				 />
			<tx:method name="query*" propagation="REQUIRED"
				 />
			<tx:method name="add*" propagation="REQUIRED" isolation="SERIALIZABLE"/>
			<tx:method name="submit*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="check*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="set*" propagation="REQUIRED" />
			<tx:method name="validate*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- aop -->
	<!--配置切面完成织入-->
	<aop:config>
	   <!--配置切点-->
		<aop:pointcut id="serviceMethod"
			expression="execution(* com.c.serviceImpl.*.*(..))" />
			 <!--配置切面-->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
	</aop:config>	
	
	

</beans>